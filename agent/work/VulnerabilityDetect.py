# coding=utf-8
import json
import threading
import wmi
import pythoncom

from RiskDiscovery.vulnerability import VulnerabilityScanner


class VulnerabilityDetect(threading.Thread):
    """
    漏洞探测的线程类
    """
    def __init__(self,data):
        super().__init__()
        # 平台传递的指令
        self.__data=data

    def run(self):
        """
        线程运行方法
        :return:
        """
        self.__detect()
        # pass

    def __detect(self):
        """
        探测的方法
        :return:
        """
        self.__vulnerabilityDetect()


    def __vulnerabilityDetect(self):
        ###补丁发现
        print("开始探测漏洞数据..............!")
        # 创建扫描器实例
        scanner = VulnerabilityScanner()
        # 运行扫描，返回结果
        scan_results = scanner.run_scan()
        vul_data=json.dumps(scan_results)
        print("探测漏洞数据结束！")
        return vul_data
