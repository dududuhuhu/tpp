<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tpp.threat_perception_platform.dao.VulnerabilityRulesMapper">

    <resultMap id="BaseResultMap" type="com.tpp.threat_perception_platform.pojo.VulnerabilityRules">
            <id property="id" column="id" />
            <result property="vulName" column="vul_name" />
            <result property="vulDesc" column="vul_desc" />
            <result property="vulLevel" column="vul_level" />
            <result property="vulRequestType" column="vul_request_type" />
            <result property="vulType" column="vul_type" />
            <result property="vulPath" column="vul_path" />
            <result property="vulPayload" column="vul_payload" />
            <result property="vulFlag" column="vul_flag" />
    </resultMap>

    <sql id="Base_Column_List">
        id,vul_name,vul_desc,vul_level,vul_request_type,vul_type,
        vul_path,vul_payload,vul_flag
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from vulnerability_rules
        where  id = #{id} 
    </select>
    <select id="selectALLVulnerabilityRules" resultType="com.tpp.threat_perception_platform.pojo.VulnerabilityRules">
        select * from vulnerability_rules
    </select>
    <select id="findRulesBySearchTypeAndKeywords"
            resultType="com.tpp.threat_perception_platform.pojo.VulnerabilityRules">
        select
        <include refid="Base_Column_List" />
        from vulnerability_rules
        <where>
            <if test="searchType != null and searchType != '' and keywords != null and keywords != ''">
                and (
                <choose>
                    <when test="searchType == 'vulName'">
                        vul_name like concat('%',#{keywords},'%')
                    </when>
                    <when test="searchType == 'vulLevel'">
                        vul_level like concat('%',#{keywords},'%')
                    </when>
                    <when test="searchType == 'method'">
                        vul_request_type like concat('%',#{keywords},'%')
                    </when>
                </choose>
                )
            </if>
        </where>
        order by id
    </select>
    <select id="findAll" resultType="com.tpp.threat_perception_platform.pojo.VulnerabilityRules">
        select
        <include refid="Base_Column_List" />
        from vulnerability_rules
        order by id
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from vulnerability_rules
        where  id = #{id} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.VulnerabilityRules" useGeneratedKeys="true">
        insert into vulnerability_rules
        ( id,vul_name,vul_desc,vul_level,vul_request_type,vul_type,
        vul_path,vul_payload,vul_flag)
        values (#{id},#{vulName},#{vulDesc},#{vulLevel},#{vulRequestType},#{vulType},
        #{vulPath},#{vulPayload},#{vulFlag})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.VulnerabilityRules" useGeneratedKeys="true">
        insert into vulnerability_rules
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="vulName != null">vul_name,</if>
                <if test="vulDesc != null">vul_desc,</if>
                <if test="vulLevel != null">vul_level,</if>
                <if test="vulRequestType != null">vul_request_type,</if>
                <if test="vulType != null">vul_type,</if>
                <if test="vulPath != null">vul_path,</if>
                <if test="vulPayload != null">vul_payload,</if>
                <if test="vulFlag != null">vul_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="vulName != null">#{vulName},</if>
                <if test="vulDesc != null">#{vulDesc},</if>
                <if test="vulLevel != null">#{vulLevel},</if>
                <if test="vulRequestType != null">#{vulRequestType},</if>
                <if test="vulType != null">#{vulType},</if>
                <if test="vulPath != null">#{vulPath},</if>
                <if test="vulPayload != null">#{vulPayload},</if>
                <if test="vulFlag != null">#{vulFlag},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tpp.threat_perception_platform.pojo.VulnerabilityRules">
        update vulnerability_rules
        <set>
                <if test="vulName != null">
                    vul_name = #{vulName},
                </if>
                <if test="vulDesc != null">
                    vul_desc = #{vulDesc},
                </if>
                <if test="vulLevel != null">
                    vul_level = #{vulLevel},
                </if>
                <if test="vulRequestType != null">
                    vul_request_type = #{vulRequestType},
                </if>
                <if test="vulType != null">
                    vul_type = #{vulType},
                </if>
                <if test="vulPath != null">
                    vul_path = #{vulPath},
                </if>
                <if test="vulPayload != null">
                    vul_payload = #{vulPayload},
                </if>
                <if test="vulFlag != null">
                    vul_flag = #{vulFlag},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tpp.threat_perception_platform.pojo.VulnerabilityRules">
        update vulnerability_rules
        set 
            vul_name =  #{vulName},
            vul_desc =  #{vulDesc},
            vul_level =  #{vulLevel},
            vul_request_type =  #{vulRequestType},
            vul_type =  #{vulType},
            vul_path =  #{vulPath},
            vul_payload =  #{vulPayload},
            vul_flag =  #{vulFlag}
        where   id = #{id} 
    </update>
</mapper>
