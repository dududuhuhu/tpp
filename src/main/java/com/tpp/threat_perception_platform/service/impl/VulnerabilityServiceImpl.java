package com.tpp.threat_perception_platform.service.impl;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.tpp.threat_perception_platform.dao.VulnerabilityRiskMapper;
import com.tpp.threat_perception_platform.param.VulnerabilityParam;
import com.tpp.threat_perception_platform.param.WeakpasswordParam;
import com.tpp.threat_perception_platform.pojo.VulnerabilityRisk;
import com.tpp.threat_perception_platform.pojo.WeakpasswordRisk;
import com.tpp.threat_perception_platform.response.ResponseResult;
import com.tpp.threat_perception_platform.service.VulnerabilityService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class VulnerabilityServiceImpl implements VulnerabilityService {

    @Autowired
    private VulnerabilityRiskMapper vulnerabilityRiskMapper;

    /**
     * 保存
     */
    @Override
    public ResponseResult saveVulnerabilityRisk(VulnerabilityRisk vulnerabilityRisk) {
        // 先查询是否已存在
        VulnerabilityRisk db = vulnerabilityRiskMapper.selectByMacAndRuleId(vulnerabilityRisk.getMac(),vulnerabilityRisk.getRuleId());
        if (db != null) {
            return new ResponseResult<>(1003, "该弱密码风险记录已存在！");
        }

        // 添加
        vulnerabilityRiskMapper.insert(vulnerabilityRisk);
        return new ResponseResult<>(0, "添加成功！");
    }

    /**
     * 查询列表（分页）
     */
    @Override
    public ResponseResult vulnerabilityRiskList(VulnerabilityParam param) {
        String mac= param.getMacAddress();
        System.out.println("mac:"+mac);
        // 设置分页参数
        PageHelper.startPage(param.getPage(), param.getLimit());
        List<VulnerabilityRisk> vulnerabilityRiskList = vulnerabilityRiskMapper.findAll(mac);
        // 构架pageInfo
        PageInfo<VulnerabilityRisk> pageInfo = new PageInfo<>(vulnerabilityRiskList);

        return new ResponseResult<>(pageInfo.getTotal(), pageInfo.getList());
    }
}
